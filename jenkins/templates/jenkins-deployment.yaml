{{- $relname := .Release.Name -}}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" .Chart.Name $relname | trunc 63 }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        jenkins: {{ printf "master-%s" $relname | trunc 63 }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "init",
            "image": "busybox:latest",
            "command": [ "sh", "-c", "chown 1000:1000 /var/jenkins_home/jobs" ],
            "volumeMounts": [
              { "name": "jobs", "mountPath": "/var/jenkins_home/jobs" }
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ]'
    spec:
      containers:
      - name: jenkins
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
{{- range .Values.service.ports }}
          - name: {{ .name }}
            containerPort: {{ .port }}
{{- end }}
        volumeMounts:
{{- range .Values.volumes }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
{{- end }}
          - name: jenkins-credentials
            mountPath: /usr/share/jenkins/ref/init.groovy.d/credentials.groovy
            subPath: credentials.groovy
          - name: kubernetes-cloud
            mountPath: /usr/share/jenkins/ref/init.groovy.d/kubernetes.groovy
            subPath: kubernetes.groovy
          - name: docker-sock
            mountPath: /var/run/docker.sock
        env:
          - name: TRY_UPGRADE_IF_NO_MARKER
            value: "true"
          - name: JAVA_OPTS
            value: "-Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Taipei -Djenkins.install.runSetupWizard=false {{ .Values.mem.heapSize }}"
      volumes:
{{- range .Values.volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ printf "jenkins-master-%s-%s" .name $relname | trunc 63 }}
{{- end }}
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - configMap:
            name: {{ printf "jenkins-master-%s" $relname | trunc 63 }}
          name: jenkins-credentials
        - configMap:
            name: {{ printf "jenkins-master-%s" $relname | trunc 63 }}
          name: kubernetes-cloud
